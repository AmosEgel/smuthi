# -*- coding: utf-8 -*-
"""
Created on Mon Nov 20 14:58:22 2017

@author: theobald2
"""

import numpy as np
import smuthi.particles as part
import smuthi.particle_coupling as pacou
import smuthi.layers as lay


spheroid1 = part.Spheroid(position=[0, 0, 400], euler_angles=[0.324, 0.567, 1.234],
                          refractive_index=2.4 + 0.0j, semi_axis_c=50, semi_axis_a=100, l_max=5, m_max=5, t_matrix_method=None)
spheroid2 = part.Spheroid(position=[162, 261, 253], euler_angles=[0.45, 1.23, 0.788],
                          refractive_index=2.4 + 0.0j, semi_axis_c=100, semi_axis_a=50, l_max=5, m_max=5, t_matrix_method=None)

dic = pacou.spheroids_closest_points(spheroid1.semi_axis_a, spheroid1.semi_axis_c, spheroid1.position, spheroid1.euler_angles,
                                     spheroid2.semi_axis_a, spheroid2.semi_axis_c, spheroid2.position, spheroid2.euler_angles)
# Values generated by Matlab, and cross-checked via Comsol visualization 
p1 = np.array([43.35, 78.08, 355.20])
p2 = np.array([112.83, 212.50, 266.37])

def test_closest_points():
    err_p1 = np.linalg.norm(dic['p1']- p1) / np.linalg.norm(p1)
    err_p2 = np.linalg.norm(dic['p2']- p2) / np.linalg.norm(p2) 
    print('error p1:', err_p1)
    print('error p2:', err_p2)
    assert err_p1 < 1e-4
    assert err_p2 < 1e-4


wl = 550
lay_sys = lay.LayerSystem([0, 800, 0], [1, 1, 1])
stp = 50000
kpkmax = 30
W = pacou.direct_coupling_block(vacuum_wavelength=wl, receiving_particle=spheroid2, emitting_particle=spheroid1,
                                layer_system=lay_sys)
W_pvwf = pacou.direct_coupling_block_pvwf(vacuum_wavelength=wl, receiving_particle=spheroid2, emitting_particle=spheroid1,
                                          layer_system=lay_sys, steps=stp, kpar_k_max=kpkmax)

def test_W_block_pvwf_coupling():
    err =  np.linalg.norm(W-W_pvwf) / np.linalg.norm(W) 
    print('error direct_coupling_block:', err)
    assert err < 1e-4

if __name__ == '__main__':
    test_closest_points()
    test_W_block_pvwf_coupling()
              